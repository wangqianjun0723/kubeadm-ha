# 提权操作
ansible_become: true
#----------------------------------------------- 基础参数 -------------------------------------------------#
_host_architecture_groups:
  x86_64: amd64
  aarch64: arm64
  armv7l: arm
host_architecture: >-
  {%- if ansible_architecture in _host_architecture_groups -%}
  {{ _host_architecture_groups[ansible_architecture] }}
  {%- else -%}
  {{ ansible_architecture }}
  {%- endif -%}

_host_distribution_groups:
  uos: debian
host_distribution: >-
  {%- if ansible_distribution in _host_distribution_groups -%}
  {{ _host_distribution_groups[ansible_distribution] }}
  {%- else -%}
  {{ ansible_distribution }}
  {%- endif -%}

host_distribution_release: >-
  {%- if (ansible_distribution_release == 'n/a') or (ansible_distribution_release is not defined) or (ansible_distribution_release == '') -%}
  buster
  {%- else -%}
  {{ ansible_distribution_release }}
  {%- endif -%}

# kubernetes各组件镜像仓库前缀
kube_image_repository: registry.aliyuncs.com/kubeadm-ha

# Pod根容器
pod_infra_container_image: "{{ kube_image_repository }}/pause:3.2"
# Kubelet 根目录
kubelet_root_dir: "/var/lib/kubelet"

# 是否启用 chrony
chrony_enabled: false
ntp_server: "ntp.aliyun.com"
chrony_image: "{{ kube_image_repository }}/setzero_chrony:3.5"

# Keepalived 提供的 VIPs
KUBE_APISERVER_IP: >-
  {% if lb_kube_apiserver_ip is not defined %}
    127.0.0.1
  {% else %}
    {{ lb_kube_apiserver_ip }}
  {% endif %}

# containerd 是否使用 systemd 作为 cgroup 驱动程序
containerd_use_systemd_cgroup: true

# 当前节点ip
CURRENT_HOST_IP: "{% if hostvars[inventory_hostname]['ansible_host'] is defined %}{{ hostvars[inventory_hostname]['ansible_host'] }}{% else %}{{ inventory_hostname }}{% endif %}"
# CRI socket path
CRI_SOCKET: >-
  {%- if container_manager_detected == 'containerd' -%}
  /var/run/containerd/containerd.sock
  {%- else -%}
  /var/run/dockershim.sock
  {%- endif -%}
# 镜像拉取命令
IMAGE_PULL_COMMAND: >-
  {%- if container_manager_detected == 'containerd' -%}
  crictl pull
  {%- else -%}
  docker pull
  {%- endif -%}
# kubelet 启动参数
KUBELET_ARGS_BASE: >-
  --address=127.0.0.1
  {% if container_manager_detected == 'containerd' %}
  --container-runtime=remote
  --container-runtime-endpoint=unix://{{ CRI_SOCKET }}
  {% else %}
  --pod-infra-container-image={{ pod_infra_container_image }}
  {% endif %}
  --root-dir={{ kubelet_root_dir }}
  --hostname-override={{ inventory_hostname }}
  --pod-manifest-path=/etc/kubernetes/manifests
  --cgroup-driver={{ kubelet_cgroup_driver|default(kubelet_cgroup_driver_detected) }}